@model StonePlusCalc.Models.CostModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <h3>Personal Information</h3>
        <div class="row">
            <div class="col-lg-3">
                Stone Code:
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-3">
                Tons:
                @Html.EditorFor(model => model.Tons, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tons, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-3">
                Material Price Per Ton
                @Html.EditorFor(model => model.MPPT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MPPT, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-3">
                Freight Price Per Ton
                @Html.EditorFor(model => model.FPPT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FPPT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>
            @if (Model.check == true)
            {
                <p>Vendor I: @Model.VI</p>
                <p>Vendor C: @Model.VC</p>
                <p>Freight I: @Model.FI</p>
                <p>Freight C: @Model.FC</p>
            }
        </div>

        <br />
        <div class="form-group">
            <div class="text-center">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}